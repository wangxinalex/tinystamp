Properties:
  RandomSeed = 1;           // use random seed for RNG
  ReadOnlyHint = 1;         // tag read-only transactions
//  WaitForTimeOut = 1;
//  Timeout = 1000000000;   

Definitions:				// variables and constants
  W  = 4;            // total work 
  _wp = 2;	     // size of a work piece
  _t = 0;	     // temporary variable to store content of a shared var
  _rep = 0;	     // number of repetitions of a series of transactions once work pieces are assigned
  _cond = 1;	     // variable indicating whether a thread should continue working or stop
  _size = 1;          // variable indicating the size of the data structure 
  NA = 100;
  a[1..NA]=0;						 // memory range for accounts
  RAND = <1.._size>;  

Transactions:			                         // specification of transactions
  T_W :=  R(W,_t), {? [_t > _wp] : {_rep=_wp, _t=_t-_wp, _cond=1}, W(W,_t) |  {_rep=_t, _t=0, _cond =0}, W(W,_t)};	
  T_1  := {_size = 1},{# k=[1.._size]: R(a[k],_t), {? [_t == 0]: W(a[k],1), {_size = _size+1}  } }, W(a[RAND]);    
//  T_1 := {# _k=[1.._NB]: R(a[_k]),W(a[_k])};

Threads:       	  	     	     			 // specification of threads
  P_1 := (T_W,(T_1)(_rep))(_cond);	

