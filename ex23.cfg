Properties:
  RandomSeed = 1;           // use random seed for RNG
  ReadOnlyHint = 1;         // tag read-only transactions
  WaitForTimeOut = 1;
  Timeout = 100000;   

Definitions:				// variables and constants
  _NA = 8000;
  _NB = 96;    					 // number of accounts (constant)
  a[1.._NA]=0;						 // memory range for accounts
  _SRCA= <1.._NA>;
  _DSTA= <1.._NA>;
  _SRCB= <1.._NB>;						 // random value (constant) in range 1 .. NB
  _DSTB= <1.._NB>;						 // random value (constant) in range 1 .. NB
  _SRCC= <1.._NB>;
  _DSTC= <1.._NB>;

Transactions:			                         // specification of transactions
//  T_1:= R(a[_SRCA]),R(a[_DSTA]),W(a[_SRCA]),W(a[_DSTA]);  // transfer
  T_2:= R(a[_SRCB]),R(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),W(a[_SRCB]),W(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),W(a[_SRCB]),W(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),W(a[_SRCB]),W(a[_DSTB]),R(a[_SRCB]),R(a[_DSTC]),W(a[_SRCB]),W(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),R(a[_SRCB]),R(a[_DSTB]),W(a[_SRCC]),W(a[_DSTC]),R(a[_SRCC]),R(a[_DSTC]),W(a[_SRCC]),W(a[_DSTC]);
//  T_1 := {# k=[1.._NB]: R(a[k])};                // compute balance
    T_1 := {# k=[1.._NB]: R(a[k]), W(a[k])};                // compute balance

//  T_1 := {# _k=[1.._NB]: R(a[_k]),W(a[_k])};

Threads:       	  	     	     			 // specification of threads
  P_1 := (T_1)80000000,(T_2)80000000,(T_1)80000000,(T_2)80000000,(T_1)80000000,(T_2)80000000,(T_1)80000000,(T_2)80000000,(T_1)80000000,(T_2)80000000,(T_1)80000000,(T_2)80000000;	
//P_1 := T_1*;
//  P_2 := T_transfer*; 
//  P_2,P_3 := T_transfer*; 
//  P_2,P_3,P_4,P_5,P_6,P_7,P_8,P_9,P_10,P_11,P_12,P_13,P_14,P_15,P_16,P_17,P_18,P_19,P_20,P_21,P_22,P_23,P_24,P_25,P_26,P_27,P_28,P_29,P_30,P_31,P_32,P_33,P_34,P_35,P_36,P_37,P_38,P_39,P_40,P_41,P_42,P_43,P_44,P_45,P_46,P_47,P_48 := T_transfer*; 
//    P_2,P_3,P_4,P_5,P_6,P_7,P_8,P_9,P_10,P_11,P_12 := T_transfer*; 

