
Properties:                 // global properties
  RandomSeed = 1;           // use random seed for RNG
  ReadOnlyHint = 1;         // tag read-only transactions
  WaitForTimeOut = 1;
  Timeout = 1000000;   

Definitions:                // variables and constants
  _SIZE = 4096;              // size of the list (constant)
  m[0 .. 2*_SIZE+1] = 0;     // memory range for list nodes
  _NB = <1 .. _SIZE>;         // random value (constant) in range 1$\ldots$SIZE  
  _f = 0;          // flag to alternate between inserts and removes
  _v = 0;          // last value added

Transactions:               // specification of transactions
  T_search := {# _k = [0 .. _NB-1] : R(m[2*_k]), R(m[2*_k+1]) },     // search element 
              R(m[2*_NB]) ;                             
  T_update := {? [_f == 0] :                           
                {# _k = [0 .. _NB-1] : R(m[2*_k]), R(m[2*_k+1]) },   // add element
                R(m[2*_NB]), W(m[2*_NB-1]),                
                { _f = 1, _v = _NB }                    
              | 
                {# _k = [0 .. _v-1] : R(m[2*_k]), R(m[2*_k+1]) },  // del. element
                R(m[2*_v]), R(m[2*_v+1]), 
                W(m[2*_v-1]), W(m[2*_v]), W(m[2*_v+1]),
                { _f = 0 }                             
              } ;                                      

Threads:                  // specification of threads
P_1,P_2 := < T_search : 80% | T_update : 20% >*;
