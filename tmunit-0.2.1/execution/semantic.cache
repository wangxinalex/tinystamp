;; Object execution/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "execution/"
  :tables (list 
   (semanticdb-table "tinySTM_new.h"
    :major-mode 'c-mode
    :tags '(("_STM_INTERFACE_H_" variable (:constant-flag t) nil [583 611]) ("stm.h" include nil nil [610 626]) ("TM_INIT" variable (:constant-flag t :default-value (nil)) nil [628 680]) ("TM_EXIT" variable (:constant-flag t :default-value (nil)) nil [681 733]) ("TM_INIT_THREAD" variable (:constant-flag t :default-value (nil)) nil [735 794]) ("TM_EXIT_THREAD" variable (:constant-flag t :default-value (nil)) nil [795 854]) ("TM_START" variable (:constant-flag t :default-value (nil)) nil [856 923]) ("STM_GET_ENV" variable (:constant-flag t :default-value (nil)) nil [924 979]) ("START_TX" variable (:constant-flag t :default-value (nil)) nil [980 1034]) ("_env" variable (:pointer 1 :default-value "STM_GET_ENV(TxDesc)" :type "int") nil [1033 1061]) ("sigsetjmp" function (:prototype-flag t :arguments (("" variable (:type ("_env" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1117 1122])) :type "int") nil [1106 1126]) ("COMMIT_TX" variable (:constant-flag t :default-value (nil)) nil [1177 1231]) ("TM_LOAD" variable (:constant-flag t :default-value (nil)) nil [1233 1300]) ("TM_STORE" variable (:constant-flag t :default-value (nil)) nil [1302 1401]) ("TM_ABORT" variable (:constant-flag t :default-value (nil)) nil [1403 1456]) ("stm_tx_t" type (:typedef ("int") :superclasses "int" :type "typedef") nil [1617 1638]))
    :file "tinySTM_new.h"
    :pointmax 1771
    :unmatched-syntax 'nil
    )
   (semanticdb-table "thread.c"
    :major-mode 'c-mode
    :tags '(("thread.h" include nil nil [556 575]) ("barrier" variable (:type ("barrier_t" type (:type "class") nil nil)) nil [577 626]) ("termination_barrier" variable (:type ("barrier_t" type (:type "class") nil nil)) nil [577 626]) ("TerminateRequestedBySignal" variable (:type "unsigned long") nil [628 669]) ("ThreadSeed" variable (:pointer 1 :type "unsigned int") nil [670 692]) ("TxDesc" variable (:pointer 1 :default-value "NULL;" :type ("stm_tx_t" type (:type "class") nil nil)) nil [798 820]) ("tx_id_counter" variable (:default-value "0" :type ("AO_t" type (:type "class") nil nil)) nil [824 847]) ("envPtr" variable (:pointer 1 :type ("sigjmp_buf" type (:type "class") nil nil)) nil [860 879]) ("TxDesc" variable (:pointer 1 :default-value "NULL;" :type ("stm_tx_t" type (:type "class") nil nil)) nil [940 964]) ("TxDesc" variable (:pointer 1 :default-value "NULL;" :type ("stm_tx_t" type (:type "class") nil nil)) nil [1034 1058]) ("ptst" variable (:pointer 1 :default-value "NULL;" :type ("ptst_t" type (:type "class") nil nil)) nil [1071 1093]) ("ThreadStart" function (:pointer 1 :arguments (("Parameters" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1207 1224])) :type "void") nil [1189 4483]) ("ExecuteThread" function (:arguments (("ThreadNo" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4506 4524])) :type "void") nil [4487 6600]) ("ExecuteTransaction" function (:arguments (("TxDesc" variable (:pointer 1 :type ("stm_tx_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6627 6644]) ("CurrentThreadInfo" variable (:pointer 1 :type ("ThreadInfo_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6645 6677]) ("CurrentTxID" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6678 6699])) :type ("bool" type (:type "class") nil nil)) nil [6603 25103]) ("ChooseTransaction" function (:arguments (("CurrentTxContainer" variable (:pointer 1 :type ("TxContainer_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25133 25167]) ("ThreadNo" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [25168 25186])) :type "unsigned int") nil [25106 26200]) ("InitializeThreadSeeds" function (:arguments (("ThreadNum" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [26231 26250])) :type "void") nil [26204 26986]))
    :file "thread.c"
    :pointmax 26989
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
